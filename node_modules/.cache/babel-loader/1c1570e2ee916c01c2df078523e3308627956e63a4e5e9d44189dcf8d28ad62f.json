{"ast":null,"code":"const tanghuluItems = [{\n  id: 1,\n  name: 'Shanzha Pop',\n  chineseName: '山楂糖葫芦',\n  description: 'The classic and most traditional form of Tanghulu, made with hawthorn fruits coated in a hard sugar shell. The combination of the sweet outer coating and the tart hawthorn creates a perfect balance of flavors.',\n  image: '/images/traditional-hawthorn.png',\n  ingredients: ['hawthorn fruits', 'sugar', 'water', 'bamboo skewer'],\n  origin: 'Northern China',\n  popularity: 10,\n  sweetness: 6\n}, {\n  id: 2,\n  name: 'Grape Fruit Pop',\n  chineseName: '葡萄糖葫芦',\n  description: 'Small grapes on a stick coated in hardened sugar syrup. The thin crispy sugar shell shatters delightfully when bitten into, revealing the juicy grape inside.',\n  image: '/images/grape-tanghulu.png',\n  ingredients: ['grapes', 'sugar', 'water', 'bamboo skewer'],\n  popularity: 9,\n  sweetness: 9\n}, {\n  id: 3,\n  name: 'Mixed Fruit Pop',\n  chineseName: '水果糖葫芦',\n  description: 'A colorful assortment of different fruits on a single skewer, all coated in the signature crispy sugar shell. This variety offers a medley of flavors and textures in one treat.',\n  image: '/images/mixed-fruit-tanghulu.png',\n  ingredients: ['grapes', 'strawberries', 'kiwi', 'pineapple', 'sugar', 'water', 'bamboo skewer'],\n  popularity: 8,\n  sweetness: 7\n}];\n\n// Categorize items\nconst categorizeItems = items => {\n  const categories = {\n    traditional: [],\n    modern: [],\n    fruit: [],\n    special: []\n  };\n\n  // Categorize based on certain criteria\n  items.forEach(item => {\n    // Traditional hawthorn tanghulu\n    if (item.id === 1) {\n      categories.traditional.push(item);\n    }\n\n    // Fruit-based tanghulu\n    if ([2, 3].includes(item.id)) {\n      categories.fruit.push(item);\n    }\n\n    // All items are special varieties for this simplified list\n    categories.special.push(item);\n  });\n  return {\n    items,\n    categories\n  };\n};\nexport const getTanghuluData = () => {\n  return categorizeItems(tanghuluItems);\n};\nexport const getTanghuluById = id => {\n  return tanghuluItems.find(item => item.id === id);\n};\nexport const getTanghuluByCategory = category => {\n  const data = categorizeItems(tanghuluItems);\n  return data.categories[category] || [];\n};\nconst tanghuluService = {\n  getTanghuluData,\n  getTanghuluById,\n  getTanghuluByCategory\n};\nexport default tanghuluService;","map":{"version":3,"names":["tanghuluItems","id","name","chineseName","description","image","ingredients","origin","popularity","sweetness","categorizeItems","items","categories","traditional","modern","fruit","special","forEach","item","push","includes","getTanghuluData","getTanghuluById","find","getTanghuluByCategory","category","data","tanghuluService"],"sources":["/Users/james/Projects/candied-haws/src/services/tanghuluData.ts"],"sourcesContent":["import { TanghuluItem, TanghuluCategory, TanghuluData } from '../types/tanghulu';\n\nconst tanghuluItems: TanghuluItem[] = [\n  {\n    id: 1,\n    name: 'Shanzha Pop',\n    chineseName: '山楂糖葫芦',\n    description: 'The classic and most traditional form of Tanghulu, made with hawthorn fruits coated in a hard sugar shell. The combination of the sweet outer coating and the tart hawthorn creates a perfect balance of flavors.',\n    image: '/images/traditional-hawthorn.png',\n    ingredients: ['hawthorn fruits', 'sugar', 'water', 'bamboo skewer'],\n    origin: 'Northern China',\n    popularity: 10,\n    sweetness: 6\n  },\n  {\n    id: 2,\n    name: 'Grape Fruit Pop',\n    chineseName: '葡萄糖葫芦',\n    description: 'Small grapes on a stick coated in hardened sugar syrup. The thin crispy sugar shell shatters delightfully when bitten into, revealing the juicy grape inside.',\n    image: '/images/grape-tanghulu.png',\n    ingredients: ['grapes', 'sugar', 'water', 'bamboo skewer'],\n    popularity: 9,\n    sweetness: 9\n  },\n  {\n    id: 3,\n    name: 'Mixed Fruit Pop',\n    chineseName: '水果糖葫芦',\n    description: 'A colorful assortment of different fruits on a single skewer, all coated in the signature crispy sugar shell. This variety offers a medley of flavors and textures in one treat.',\n    image: '/images/mixed-fruit-tanghulu.png',\n    ingredients: ['grapes', 'strawberries', 'kiwi', 'pineapple', 'sugar', 'water', 'bamboo skewer'],\n    popularity: 8,\n    sweetness: 7\n  }\n];\n\n// Categorize items\nconst categorizeItems = (items: TanghuluItem[]): TanghuluData => {\n  const categories: {[key in TanghuluCategory]: TanghuluItem[]} = {\n    traditional: [],\n    modern: [],\n    fruit: [],\n    special: []\n  };\n  \n  // Categorize based on certain criteria\n  items.forEach(item => {\n    // Traditional hawthorn tanghulu\n    if (item.id === 1) {\n      categories.traditional.push(item);\n    }\n    \n    // Fruit-based tanghulu\n    if ([2, 3].includes(item.id)) {\n      categories.fruit.push(item);\n    }\n    \n    // All items are special varieties for this simplified list\n    categories.special.push(item);\n  });\n  \n  return {\n    items,\n    categories\n  };\n};\n\nexport const getTanghuluData = (): TanghuluData => {\n  return categorizeItems(tanghuluItems);\n};\n\nexport const getTanghuluById = (id: number): TanghuluItem | undefined => {\n  return tanghuluItems.find(item => item.id === id);\n};\n\nexport const getTanghuluByCategory = (category: TanghuluCategory): TanghuluItem[] => {\n  const data = categorizeItems(tanghuluItems);\n  return data.categories[category] || [];\n};\n\nconst tanghuluService = {\n  getTanghuluData,\n  getTanghuluById,\n  getTanghuluByCategory\n};\n\nexport default tanghuluService;\n"],"mappings":"AAEA,MAAMA,aAA6B,GAAG,CACpC;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,aAAa;EACnBC,WAAW,EAAE,OAAO;EACpBC,WAAW,EAAE,mNAAmN;EAChOC,KAAK,EAAE,kCAAkC;EACzCC,WAAW,EAAE,CAAC,iBAAiB,EAAE,OAAO,EAAE,OAAO,EAAE,eAAe,CAAC;EACnEC,MAAM,EAAE,gBAAgB;EACxBC,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE;AACb,CAAC,EACD;EACER,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,iBAAiB;EACvBC,WAAW,EAAE,OAAO;EACpBC,WAAW,EAAE,+JAA+J;EAC5KC,KAAK,EAAE,4BAA4B;EACnCC,WAAW,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,eAAe,CAAC;EAC1DE,UAAU,EAAE,CAAC;EACbC,SAAS,EAAE;AACb,CAAC,EACD;EACER,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,iBAAiB;EACvBC,WAAW,EAAE,OAAO;EACpBC,WAAW,EAAE,kLAAkL;EAC/LC,KAAK,EAAE,kCAAkC;EACzCC,WAAW,EAAE,CAAC,QAAQ,EAAE,cAAc,EAAE,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,eAAe,CAAC;EAC/FE,UAAU,EAAE,CAAC;EACbC,SAAS,EAAE;AACb,CAAC,CACF;;AAED;AACA,MAAMC,eAAe,GAAIC,KAAqB,IAAmB;EAC/D,MAAMC,UAAuD,GAAG;IAC9DC,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC;;EAED;EACAL,KAAK,CAACM,OAAO,CAACC,IAAI,IAAI;IACpB;IACA,IAAIA,IAAI,CAACjB,EAAE,KAAK,CAAC,EAAE;MACjBW,UAAU,CAACC,WAAW,CAACM,IAAI,CAACD,IAAI,CAAC;IACnC;;IAEA;IACA,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAACE,QAAQ,CAACF,IAAI,CAACjB,EAAE,CAAC,EAAE;MAC5BW,UAAU,CAACG,KAAK,CAACI,IAAI,CAACD,IAAI,CAAC;IAC7B;;IAEA;IACAN,UAAU,CAACI,OAAO,CAACG,IAAI,CAACD,IAAI,CAAC;EAC/B,CAAC,CAAC;EAEF,OAAO;IACLP,KAAK;IACLC;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMS,eAAe,GAAGA,CAAA,KAAoB;EACjD,OAAOX,eAAe,CAACV,aAAa,CAAC;AACvC,CAAC;AAED,OAAO,MAAMsB,eAAe,GAAIrB,EAAU,IAA+B;EACvE,OAAOD,aAAa,CAACuB,IAAI,CAACL,IAAI,IAAIA,IAAI,CAACjB,EAAE,KAAKA,EAAE,CAAC;AACnD,CAAC;AAED,OAAO,MAAMuB,qBAAqB,GAAIC,QAA0B,IAAqB;EACnF,MAAMC,IAAI,GAAGhB,eAAe,CAACV,aAAa,CAAC;EAC3C,OAAO0B,IAAI,CAACd,UAAU,CAACa,QAAQ,CAAC,IAAI,EAAE;AACxC,CAAC;AAED,MAAME,eAAe,GAAG;EACtBN,eAAe;EACfC,eAAe;EACfE;AACF,CAAC;AAED,eAAeG,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}